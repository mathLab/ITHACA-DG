/*------------------------------------------------------------------------------------*\
|     __  ______  ____  ______ |                                                       |
|    / / / / __ \/ __ \/ ____/ | HopeFOAM: High Order Parallel Extensible CFD Software |
|   / /_/ / / / / /_/ / __/    |                                                       |
|  / __  / /_/ / ____/ /___    |                                                       |
| /_/ /_/\____/_/   /_____/    | Copyright(c) 2017-2017 The Exercise Group, AMS, China.|
|                              |                                                       |
\*------------------------------------------------------------------------------------*/
FoamFile
{
    version     0.1;
    format      ascii;
    class       dictionary;
    location    "system";
    object      dgSchemes;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

ddtSchemes
{
//     default         backward;
    default Euler;
}

gradSchemes
{
//     default         cellMDLimited Gauss linear 0.5;
    default Gauss linear; 
}

divSchemes
{
    default         Gauss linear;
/*    div(phi,U)      Gauss linear; //linearUpwind grad(U);*/
/*    div((nuEff*dev(T(grad(U))))) Gauss linear;*/
/*    div((nuEff*dev2(T(grad(U))))) Gauss linear;*/
/*    div((nuEff*dev2(T(grad(Ua))))) Gauss linear;*/
/*    div((interpolate(U)&S),U) Gauss linearUpwind grad(U);*/
/*    div((interpolate(U)&S),Usup) Gauss linearUpwind grad(Usup);*/
/*    div((interpolate(U)&S),Ulift0) Gauss linearUpwind grad(Ulift0);*/
/*    div((interpolate(Usup)&S),U) Gauss linearUpwind grad(U);*/
/*    div((interpolate(Usup)&S),Usup) Gauss linearUpwind grad(Usup);*/
/*    div((interpolate(Usup)&S),Ulift0) Gauss linearUpwind grad(Ulift0);*/
/*    div((interpolate(Ulift0)&S),U) Gauss linearUpwind grad(U);*/
/*    div((interpolate(Ulift0)&S),Usup) Gauss linearUpwind grad(Usup);*/
/*    div((interpolate(Ulift0)&S),Ulift0) Gauss linearUpwind grad(Ulift0);*/
}

laplacianSchemes
{
    default        Gauss linear limited 1.0
}

interpolationSchemes
{
    default         linear;
}

snGradSchemes
{
    default         limited 1;
}

fluxRequired
{
    default         no;
    p;
    Phi;
}

// ************************************************************************* //
